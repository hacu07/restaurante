CONSULTA MODULO COCINA 
actualiza el estado del pedido segun  el estado minimo de los productos 

UPDATE pedidos SET idEstado = (SELECT MIN(idEstado) AS estadoMinimo FROM productopedido WHERE idPedido = 1) WHERE idPedido = 1





consulta modulo caja 
muestra el valor de pedido. (Falta calcular el Iva )
SELECT SUM(producto.Precio*productopedido.cantidad) AS valorPedido FROM producto JOIN productopedido on producto.idProducto = productopedido.idProducto





 mostrar detalles de la tablaDetallesFactura del modal de modulo caja 
select producto.nombre, producto.Precio, productopedido.cantidad, productopedido.valor from producto join productopedido on producto.idProducto = productopedido.idProducto where productopedido.idPedido = 1



MUESTRA LOS PRODUCTOS QUE DEBEN IR EN CATEGORIA PLATOS 
SELECT nombre FROM producto where idCategoria = 1 

MUESTRA LOS PRODUCTOS QUE DEBEN IR EN CATEGORIA PLATOS 
SELECT nombre FROM producto where idCategoria = 2 





------------STORE PROCEDURE----------------

//Cuando se selecciona una mesa para un nuevo pedido se ejecuta este sp

DELIMITER $$
create procedure sp_registrarNuevoPedido(in numeroMesa int, in ideMesero int )
begin 
	INSERT INTO pedidos(numMesa,fechaPedido,idMesero,idEstado) VALUES (numeromesa,NOW(),ideMesero,1);
    UPDATE mesa SET idEstado = 2 WHERE numMesa = numeroMesa;
    SELECT MAX(idPedido) AS idPedido FROM pedidos WHERE idMesero = ideMesero AND idEstado = 1;
END



//Cuando el cajero imprime una factura, se inserta una nueva factura en la bd, se actualiza el estado del pedido a "facturado"
y el estado de la mesa pasa de noDisponible a Disponible.

DELIMITER $$
create procedure sp_registrarFactura(in idePedido int, in ideCajero int, in valFac int, in ivaFac int, in cc varchar(30) )
BEGIN
	INSERT INTO factura(numFactura,fechaFactura,valorFactura,ivaFactura,idCajero,idPedido,ccCliente) VALUES('Aqui va numFactura',NOW(),valFac,ivaFac,ideCajero,	idePedido, cc);
    UPDATE pedidos SET idEstado = 6 WHERE idPedido = idePedido;
    update mesa set idEstado = 1 where numMesa like (select numMesa from pedidos WHERE idPedido = idePedido);
END


//Actualiza los estados del producto y el estado del pedido segun el producto que tenga el estado menor

DELIMITER $$
create procedure sp_actualizarEstados(in idePedido int, in ideEstado int, in numeroProd int )
BEGIN
	UPDATE productopedido SET idEstado = ideEstado WHERE numero = numeroProd;
	UPDATE pedidos SET idEstado = (SELECT MIN(idEstado) AS estadoMinimo FROM productopedido WHERE idPedido = idePedido) WHERE idPedido = idePedido;
END



//MUESTRA LOS PRODUCTOS EXISTENTES 
select producto.nombre, producto.precio, categoria.nombre from producto join categoria on producto.idCategoria = categoria.idCategoria



//CONSULTA SI EXISTE UN NOMBRE EN LA CATEGORIA EN LA BD
DELIMITER $$
CREATE PROCEDURE sp_nombresCategorias(in nombreABuscar varchar(30)) 
BEGIN 
	
	SELECT @existe := COUNT(nombre) AS existen FROM categoria WHERE nombre LIKE nombreABuscar;
    
    IF @existe = 0 THEN 
    
    INSERT INTO categoria(nombre) values (nombreABuscar);
    
   END IF;
    
 END